출력문
System.out.printin();
입력문
Scanner sc = new scanner(System.in);
입력 받기
sc.next();
변수 선언
자료형 변수명 = 대입한다.
상수 선언 --> final(자료형 앞에 선언)

변수명 작성 규칙
1.숫자로 시작할수 없다.
2.키워드사용 불가
3.대소문자를 구분하고 길이 제한이 없다.
4.특수문자는 $,_만 사용 가능하다.

jave 개발자가 권장하는 규칙
1.카멜식 기법(낙타의 혹같다)
ex)inputNumber
2.변수 이름은 소문자로 시작한다

jave의 기본자료형
1.boolean(1byte)>>true,false 참 또는 거짓
2.char(2byte)>>한글자 문자만 저장 가능하며'' 따옴표를 사용한다
 + string 사용하여 여러글자 저장""
3.byte(1) short(2) int(4) long(8) : 정수
4.float(4),double(8) : 실수

강제 형변환(명시적 형변환)
ex) byte num = (byte)128;
()를 사용함으로서 데이터 손실이 생기더라도 강제로 형을 변환한다.

연산자
-산술연산자
:+- *%/
-논리 연산자
:!()부정,&&(and),||(or)
-비교연산자
:==,!=(같지않다.),>=,<=
-대입 연산자
:=,+=,-=
-증감연산자
;++,--(변수앞뒤 사용)
//24-01-08	
Array
Stack
:가장 마지막에 넣어둔 자료가 먼저 빠져나온다.
(비교적 작은 자료 저장형)
Queue
:먼저 넣어둔 자료가 먼저 빠지는 방식
(비교적 많은자료)
Tree
:가지치기 형식의 방식
Array
:같은타입(ex:int)의 여러 변수를
하나의 묶음으로 다루는 자료구조
배열
:같은 타입의 여러 변수를 하나의 묶음으로 다루는 구조
배열의 선언방법
정수형 데이터를 3개를 저장할수 있는 array
=int[] array =new int[3];
배열안 데이터를 접근하기 위해서는 변수명과 인덱스번호를 부르며 값을 입력
배열의 길이를 가져올 수 있는 방법
array.length;

메소드의 필요성
메소드의 기본구조

접근제한자 리턴타입 메소드이름(매개변수){영역 반환데이터;}

메소드:반복적인 코드를 최소화 --> 유지보수
코드: 접근제한자 static 리턴타입 메소드이름(매개변수){
알고리즘 로직;
return result;
}
리턴타입이 없을때는-->void

메소드 중복정의(오버로딩)
:메소드 이름을 같게하고 매개변수 변수,개수를 다르게 함으로 써 중복으로 정의하는 기법

OOP.
(Object Orientde Programming
클래스: 객체를 만들기 위해서 만드는 나만의 자료형 설계도면
-클래스는 필드,메소드가 존재한다.
오브젝트: 해당 도면을 가지고 실제로 만들어 내는 것/메모디에 할당한다.

============================
OOP.
(Object Orientde Programming
-캡슐화
:필드,메소드를 하나로 묶어서 저장
+정보은닉

-상속
:기존의 어떤 클래스, 다른 사람이 만들어놓은 자료형이 있었을 때 그 기능을 그대로 이어받게끔 하는 것
-추상화
:어떤 데이터를 만드려고 봤을 때, 공통된 특징을 추춘해서 밑그림을 그리는 것
-다형성
:같은 기능을 호출하더라도 객체에 따라서 다르게 동작할 수 있다.